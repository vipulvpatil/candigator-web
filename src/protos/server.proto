syntax = "proto3";
package protos;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/vipulvpatil/candidate-tracker-go/protos";

message CheckConnectionRequest {
  string userEmail = 1;
}

message CheckConnectionResponse {
  string connectionStatus = 1;
}

message GetUserDataRequest {
  string userEmail = 1;
}

message GetUserDataResponse {
  int64 fileCountLimit = 1;
  int64 currentFileCount = 2;
  int64 unprocessedFileCount = 3;
}

message UploadFile {
  string name = 1;
}

message FileUpload {
  string id = 1;
  string name = 2;
  string presignedUrl = 3;
  string status = 4;
  string processingStatus = 5;
  string error = 6;
}

message UploadFilesRequest {
  string userEmail = 1;
  repeated UploadFile files = 2;
}

message UploadFilesResponse {
  repeated FileUpload fileUploads = 1;
}

message FileUploadUpdate {
  string id = 1;
  string status = 2;
}

message CompleteFileUploadsRequest {
  string userEmail = 1;
  repeated FileUploadUpdate fileUploadUpdates = 2;
}

message CompleteFileUploadsResponse {
  repeated FileUpload fileUploads = 1;
}

message GetUnprocessedFileUploadsCountRequest {
  string userEmail = 1;
}

message GetUnprocessedFileUploadsCountResponse {
  int64 count = 1;
}

message GetFileUploadsRequest {
  string userEmail = 1;
}

message GetFileUploadsResponse {
  repeated FileUpload fileUploads = 1;
}

message GetFileUploadRequest {
  string userEmail = 1;
  string id = 2;
}

message GetFileUploadResponse {
  FileUpload fileUpload = 1;
}

message DeleteFileUploadRequest {
  string userEmail = 1;
  string id = 2;
}

message DeleteFileUploadResponse {}

message Candidate {
  string id = 1;
	string aiGeneratedPersona = 2;
	string manuallyCreatedPersona = 3;
	string fileUploadId = 4;
  google.protobuf.Timestamp updatedAt = 5;
}

message GetCandidatesRequest {
  string userEmail = 1;
}

message GetCandidatesResponse {
  repeated Candidate candidates = 1;
}

message GetCandidateRequest {
  string userEmail = 1;
  string id = 2;
}

message GetCandidateResponse {
  Candidate candidate = 1;
}

message UpdateCandidateRequest {
  string userEmail = 1;
  string id = 2;
	string manuallyCreatedPersona = 3;
}

message UpdateCandidateResponse {
  string id = 1;
}

service CandidateTrackerGo {
  rpc CheckConnection(CheckConnectionRequest) returns (CheckConnectionResponse) {}
  rpc GetUserData(GetUserDataRequest) returns (GetUserDataResponse) {}
  rpc GetUnprocessedFileUploadsCount(GetUnprocessedFileUploadsCountRequest) returns (GetUnprocessedFileUploadsCountResponse) {}
  rpc GetFileUpload(GetFileUploadRequest) returns (GetFileUploadResponse) {}
  rpc GetFileUploads(GetFileUploadsRequest) returns (GetFileUploadsResponse) {}
  rpc UploadFiles(UploadFilesRequest) returns (UploadFilesResponse) {}
  rpc CompleteFileUploads(CompleteFileUploadsRequest) returns (CompleteFileUploadsResponse) {}
  rpc DeleteFileUpload(DeleteFileUploadRequest) returns (DeleteFileUploadResponse) {}
  rpc GetCandidates(GetCandidatesRequest) returns (GetCandidatesResponse) {}
  rpc GetCandidate(GetCandidateRequest) returns (GetCandidateResponse) {}
  rpc UpdateCandidate(UpdateCandidateRequest) returns (UpdateCandidateResponse) {}
}
